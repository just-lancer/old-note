package mysql;

public class chap09_constraint {
    /**
     *  约束
     *
     *  数据完整性：是指数据的精确性和可靠性。
     *  它是防止数据库中存在不符合语义规定的数据和防止因错误信息的输入输出造成无效操作或错误信息而提出的
     *
     *  为了数据完整性，SQL以约束的方式对表数据进行额外的条件限制，主要体现在四个方面：
     *      > 实体完整性：同一个表中不允许出现完全相同的两条记录
     *      > 域完整性：年龄范围0-120，性别范围“男/女”
     *      > 引用完整性：员工所在部门，在部门表中要能找到这个部门
     *      > 用户自定义完整性：用户名唯一、密码不能为空等，本部门经理的工资不得高于本部门职工的平均工资的5倍
     *
     *  约束的种类：
     *      > NOT NULL：非空约束，一个非空约束只能约束一个字段，被约束的字段的值不能为空
     *      > UNIQUE：唯一约束，可以通过多个列组合成唯一约束，被约束的字段的值不能重复，NULL除外，因为每个NULL都不相同
     *      > PRIMARY KEY：主键约束，可以同过多个字段共同构成主键约束
     *      > FOREIGN KEY：外键约束，
     *      > CHECK：检查约束，MySQL不支持CHECK约束，可以使用，但是没有什么效果
     *      > DEFAULT：默认值约束
     *
     *  从三个方面学习约束：
     *  > 创建表的时候，为字段设置约束
     *  > 创建表之后，为字段添加约束
     *  > 删除字段的约束
     *
     *  1、NOT NULL：非空约束
     *      > 创建非空约束：
     *      CREATE TABLE 表名(
     *      字段1 数据类型1,
     *      字段2 数据类型2 NOT NULL,
     *      ...
     *      )
     *
     *      > 添加非空约束
     *      ALTER TABLE 表名 MODIFY 字段名 数据类型 NOT NULL;
     *
     *      > 删除非空约束
     *      ALTER TABLE 表名 MODIFY 字段名 数据类型;
     *      或者
     *      ALTER TABLE 表名MODIFY 字段名 数据类型 NULL;
     *
     *  2、UNIQUE：唯一性约束
     *      唯一性约束，可以对单字段进行约束，也能钩对组合字段进行约束
     *      创建唯一性约束时需要为约束指定名称，如果没有指定名称，那么约束字段的第一个字段名为约束名称
     *      创建唯一性约束时，MySQL会自动在唯一约束字段上创建唯一索引；删除唯一约束时，必须删除唯一索引吗
     *
     *      > 创建唯一约束：两种方式
     *      CREATE TABLE 表名(
     *      字段1  数据类型1  UNIQUE,
     *      字段2  数据类型2,
     *      ...
     *      );
     *
     *      CREATE TABLE 表名(
     *      字段1  数据类型1,
     *      字段2  数据类型2,
     *      ...
     *      [CONSTRAINT 约束名]  UNIQUE(字段列表)
     *      );
     *
     *      > 添加唯一约束：两种方式
     *      ALTER TABLE 表名 MODIFY 字段名 数据类型  UNIQUE; 只能给单一字段添加唯一约束
     *      或者
     *      ALTER TABLE 表名 ADD UNIQUE(字段列表); 能够添加组合字段唯一约束
     *
     *      > 删除唯一约束
     *      ALTER TABLE 表名 DROP INDEX 唯一索引;
     *
     *  3、PRIMARY KEY：主键约束
     *      主键约束用于唯一标识表中的记录；
     *      一个表中只能有一个主键约束；
     *      主键约束的字段不为NULL，不能重复；
     *      主键约束可以由单字段构成，也能由组合字段构成；
     *      创建主键约束时，MySQL会创建主键索引；
     *      主键约束有统一的名称：PRIMARY；
     *
     *      > 创建主键约束：两种方式
     *      CREATE TABLE 表名(
     *      字段1  数据类型1  PRIMARY KEY,
     *      字段2  数据类型2,
     *      ...
     *      );
     *
     *      CREATE TABLE 表名(
     *      字段1  数据类型1,
     *      字段2  数据类型2,
     *      ...
     *      [CONSTRAINT 约束名] PRIMARY KEY (字段列表)
     *      );
     *
     *      > 添加主键：
     *      ALTER TABLE 表名 ADD PRIMARY KEY (字段名);
     *
     *      > 删除主键
     *      ALTER TABLE 表名 DROP PRIMARY KEY;
     *      主键删除后，非空约束还存在
     *
     *  4、AUTO_CREMENT：自增约束
     *      一个表中只能有一个自增约束
     *      自增约束只能作用在数值类型列上
     *      自增约束只能作用在键列上（主键、唯一键）
     *      当我们手动为自增列的数据设置值时，若值为0或者NULL，那么自增列以该列最大值开始自增；若指定的是具体值，那么会为该记录的该列赋值
     *
     *      > 创建自增约束
     *      CREATE TABLE 表名(
     *      字段1  数据类型1  PRIMARY KEY AUTO_CREMENT,
     *      或者
     *      字段2  数据类型2  UNIQUE AUTO_CREMENT,
     *      ...
     *      )
     *      数据类型必须是数值类型
     *
     *      > 添加自增约束
     *      ALTER TABLE 表名 MODIFY 字段名 数据类型  AUTO_CREMENT;
     *
     *      > 删除自增约束
     *      ALTER TABLE 表名 MODIFY 字段名 数据类型;
     *
     *      MySQL8.0新特性：自增变量持久化
     *
     *  5、外键约束：FOREIGN KEY
     *      主表，从表
     *      创建外键约束
     *      CREATE TABLE 表名(
     *      字段1  数据类型1,
     *      字段2  数据类型2,
     *      ...
     *      [CONSTRAINT 约束名] FOREIGN KEY (从表字段) REFERENCES (主表字段)
     *      )
     *
     *  6、CHECK 约束
     *      MySQL5.7不支持，使用了和没使用没啥区别
     *      MySQL8支持
     *      创建CHECK约束：
     *      CREATE TABLE 表名(
     *      字段1 数据类型1 CHECK (条件)
     *      )
     *
     *  7、DEFAULT 默认值约束
     *      当表中数据为NULL时，会向表中添加默认数据
     *      创建默认值约束
     *      CREATE TABLE 表名(
     *      字段1  数据类型1  DEFAULT 默认值,
     *      字段2  数据类型2,
     *      ...
     *      )
     */
}
